import { ethers } from "ethers";
import dotenv from "dotenv";
import { AgentNFT__factory } from "./contracts/factories/AgentNFT__factory";

dotenv.config();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ç–∏
const provider = new ethers.JsonRpcProvider(process.env.ZEROG_RPC_URL);
const privateKey = process.env.ZEROG_PRIVATE_KEY;
const signer = new ethers.Wallet(privateKey, provider);

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
const contractAddress = process.env.ZEROG_NFT_CONTRACT_ADDRESS;
const contract = AgentNFT__factory.connect(contractAddress, signer);

// –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
const recipient = args[0];  // –ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
const tokenId = args[1];    // ID NFT

if (!recipient || !tokenId) {
    console.error("‚õî –û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ ID NFT!");
    process.exit(1);
}

async function transferNFT() {
    console.log(`üîÑ –ü–µ—Ä–µ–¥–∞—á–∞ NFT #${tokenId} –æ—Ç ${await signer.getAddress()} –∫ ${recipient}...`);

    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º transferPublic (–±–µ–∑ proof)
        const tx = await contract.transferPublic(recipient, tokenId);
        console.log(`üìú –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: ${tx.hash}`);

        const receipt = await tx.wait();
        console.log("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!", receipt);
    } catch (error: any) {
        console.error("‚õî –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ NFT:", error.reason || error.message || error);
    }
}

transferNFT();